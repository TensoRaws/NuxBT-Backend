// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameTorrent = "torrent"

// Torrent mapped from table <torrent>
type Torrent struct {
	TorrentID   int32          `gorm:"column:torrent_id;type:int;primaryKey;autoIncrement:true" json:"torrent_id"`
	Hash        string         `gorm:"column:hash;type:varchar(255);not null;uniqueIndex:hash,priority:1" json:"hash"`
	UploaderID  int32          `gorm:"column:uploader_id;type:int;not null" json:"uploader_id"`
	Official    bool           `gorm:"column:official;type:tinyint(1);not null" json:"official"`
	Size        int64          `gorm:"column:size;type:bigint;not null" json:"size"`
	Status      string         `gorm:"column:status;type:varchar(255);not null" json:"status"`
	Title       string         `gorm:"column:title;type:varchar(255);not null" json:"title"`
	Subtitle    string         `gorm:"column:subtitle;type:varchar(255);not null" json:"subtitle"`
	Description string         `gorm:"column:description;type:text;not null" json:"description"`
	Genre       string         `gorm:"column:genre;type:varchar(255);not null" json:"genre"`
	AnidbID     int32          `gorm:"column:anidb_id;type:int;not null" json:"anidb_id"`
	Img         string         `gorm:"column:img;type:varchar(255);not null" json:"img"`
	Resolution  string         `gorm:"column:resolution;type:varchar(255);not null" json:"resolution"`
	VideoCodec  string         `gorm:"column:video_codec;type:varchar(255);not null" json:"video_codec"`
	AudioCodec  string         `gorm:"column:audio_codec;type:varchar(255);not null" json:"audio_codec"`
	Language    string         `gorm:"column:language;type:varchar(255);not null" json:"language"`
	URL         string         `gorm:"column:url;type:varchar(255);not null" json:"url"`
	FileList    string         `gorm:"column:file_list;type:text;not null" json:"file_list"`
	CreatedAt   *time.Time     `gorm:"column:created_at;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt   *time.Time     `gorm:"column:updated_at;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"updated_at"`
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:datetime" json:"deleted_at"`
}

// TableName Torrent's table name
func (*Torrent) TableName() string {
	return TableNameTorrent
}
